import cv2
import numpy as np
import matplotlib.pyplot as plt

img_src = r"D:\Courses_2022_Fall\ECE4513\Projects\src\MyCode\img\bird\bird_origin.jpg"

def grab_cut(image):
	# 11.35 GrabCut 图割分割算法（框选前景）
	mask = np.zeros(image.shape[:2], dtype="uint8")
	# 定义矩形框，框选目标前景
	# rect = (118, 125, 220, 245)  # 直接设置矩形的位置参数，也可以鼠标框选 ROI
	print("Select a ROI and then press SPACE or ENTER button!\n")
	roi = cv2.selectROI(image, showCrosshair=True, fromCenter=False)
	xmin, ymin, w, h = roi  # 矩形裁剪区域 (ymin:ymin+h, xmin:xmin+w) 的位置参数
	rect = (xmin, ymin, w, h)  # 边界框矩形的坐标和尺寸
	imgROI = np.zeros_like(image)  # 创建与 image 相同形状的黑色图像
	imgROI[ymin:ymin + h, xmin:xmin + w] = image[ymin:ymin + h, xmin:xmin + w].copy()
	print(xmin, ymin, w, h)
	fgModel = np.zeros((1, 65), dtype="float")  # 前景模型, 13*5
	bgModel = np.zeros((1, 65), dtype="float")  # 背景模型, 13*5
	iter = 5
	(mask, bgModel, fgModel) = cv2.grabCut(image, mask, rect, bgModel, fgModel, iter,
	                                       mode=cv2.GC_INIT_WITH_RECT)  # 框选前景分割模式
	# 将所有确定背景和可能背景像素设置为 0，而确定前景和可能前景像素设置为 1
	maskOutput = np.where((mask == cv2.GC_BGD) | (mask == cv2.GC_PR_BGD), 0, 1)
	maskGrabCut = (maskOutput * 255).astype("uint8")
	imgGrabCut = cv2.bitwise_and(image, image, mask=maskGrabCut)
	plt.figure(figsize=(10, 7))
	plt.subplot(231), plt.axis('off'), plt.title("Origin image")
	plt.imshow(cv2.cvtColor(image, cv2.COLOR_BGR2RGB))  # 显示 img(RGB)
	plt.subplot(232), plt.axis('off'), plt.title("Bounding box")
	plt.imshow(cv2.cvtColor(imgROI, cv2.COLOR_BGR2RGB))  # 显示 img(RGB)
	plt.subplot(233), plt.axis('off'), plt.title("Mask for definite background")
	maskBGD = (mask == cv2.GC_BGD).astype("uint8") * 255
	plt.imshow(maskBGD, 'gray')  # definite background
	plt.subplot(234), plt.axis('off'), plt.title("Mask for probable background")
	maskPBGD = (mask == cv2.GC_PR_BGD).astype("uint8") * 255
	plt.imshow(maskPBGD, 'gray')  # probable background
	plt.subplot(235), plt.axis('off'), plt.title("GrabCut Mask")
	# maskGrabCut = np.where((mask==cv2.GC_BGD) | (mask==cv2.GC_PR_BGD), 0, 1)
	plt.imshow(maskGrabCut, 'gray')  # mask generated by GrabCut
	plt.subplot(236), plt.axis('off'), plt.title("GrabCut Output")
	plt.imshow(cv2.cvtColor(imgGrabCut, cv2.COLOR_BGR2RGB))  # GrabCut Output
	plt.tight_layout()
	plt.show()

	return maskOutput, maskGrabCut, imgGrabCut


if __name__ == "__main__":
	img_src = img_src
	image = cv2.imread(img_src, flags=1)  # 读取彩色图像(BGR)
	maskOutput, maskGrabCut, imgGrabCut = grab_cut(image)
	print(maskGrabCut.shape)
	print(np.unique(maskGrabCut))